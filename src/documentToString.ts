import { DocumentNode } from "graphql"

/**
 * Apollo Server seems to tidy up GraphQL queries a bit, so by the time a
 * request is going through the lifecycle hooks it's got some whitespace
 * removed and other things.
 *
 * documentToString takes an AST generated by graphql-tag and gives you
 * back a string that should match what Apollo Server will see.
 */
export const documentToString = (document: DocumentNode | string) => {
  const query =
    typeof document === "string" ? document : document.loc?.source.body
  if (!query) throw new Error("Couldn't get query off DocumentNode")

  // Seems like Apollo filters out any lines without anything on them
  const lines = query.split("\n").filter((line) => !/^ *$/.test(line))

  // It also seems to deindent the query as much as possible
  let minIndent: number | undefined
  lines.forEach((line) => {
    if (line.match(/^ *$/)) return
    const match = line.match(/^ */)
    if (!match) throw new Error("This is impossible")
    const indent = match[0].length
    if (minIndent === undefined) {
      minIndent = indent
    } else if (indent < minIndent) {
      minIndent = indent
    }
  })

  return lines
    .map((line) => {
      const deindented = line.slice(minIndent)
      return deindented
        .replace(/^mutation\(/, "mutation (")
        .replace(/^query\(/, "query (")
    })
    .join("\n")
}
